// src/components/products/ProductPage.jsx

import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { supabase } from '../../supabaseClient';
import BackButton from '../BackButton';
import CartModal from '../CartModal';
import '../../styles/ProductPage.css';

const flagKR = "üá∞üá∑";

const ProductPage = () => {
  const { productId } = useParams();
  const [product, setProduct] = useState(null);
  const [modalImg, setModalImg] = useState(null);
  const [showCartModal, setShowCartModal] = useState(false);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function fetchProduct() {
      setLoading(true);
      const { data } = await supabase
        .from('products')
        .select('*')
        .eq('id', productId)
        .single();
      setProduct(data);
      setLoading(false);
    }
    fetchProduct();
  }, [productId]);

  const handleAddToCart = () => setShowCartModal(true);

  if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  if (!product) {
    return (
      <div className="product-page">
        <BackButton />
        <h2>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
      </div>
    );
  }

  // –û–ø–∏—Å–∞–Ω–∏–µ
  let description = product.description || "";
  let descMain = description;
  let advantages = [];
  if (description.includes("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:")) {
    const parts = description.split("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:");
    descMain = parts[0].trim();
    const advText = parts[1]
      .replace(/–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞:|–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:/g, "")
      .replace(/^[-‚Äì‚ñ™Ô∏è‚Ä¢]+/gm, "")
      .replace(/^\s+/gm, "")
      .split('\n')
      .filter(l => l.trim());
    advantages = advText;
  }

  let composition = product.composition || "";

  // DEMO-–ª–µ–π–±–ª –±–æ–Ω—É—Å–∞ (–º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π)
  const hasBonus = true;

  return (
    <div className="product-page">
      <BackButton />

      {/* –ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ –∏ –±–ª–æ–∫ —Å–ø—Ä–∞–≤–∞ */}
      <div className="product-main-row">
        <div className="product-img-wrap">
          <img
            src={product.images?.[0]}
            alt={product.name}
            className="product-main-img"
            draggable={false}
          />
        </div>
        <div className="product-main-info">
          <div className="product-title">{product.name}</div>
          <div className="product-price">{product.price} ‚ÇΩ</div>
          <div className="product-meta">
            <span className="product-country">{flagKR} –ö–æ—Ä–µ—è</span>
            <span className="product-rating">‚òÖ {product.rating}</span>
          </div>
          {/* –ú–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ —Å—é–¥–∞ –±–µ–π–¥–∂ –Ω–æ–≤–∏–Ω–∫–∞, —Ç–æ–ø, —Ö–∏—Ç */}
        </div>
      </div>

      {/* –ì–∞–ª–µ—Ä–µ—è */}
      <div className="product-gallery-thumbs">
        {product.images?.slice(1).map((img, idx) => (
          <img
            src={img}
            alt={`${product.name}-thumb-${idx}`}
            key={idx}
            className="product-thumb-img"
            onClick={() => setModalImg(img)}
            draggable={false}
          />
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ */}
      {modalImg && (
        <div className="img-modal" onClick={() => setModalImg(null)}>
          <img src={modalImg} alt="big" />
        </div>
      )}

      {/* –ë–ª–æ–∫ ‚Äú–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç —ç—Ç–æ—Ç –ø—Ä–µ–ø–∞—Ä–∞—Ç‚Äù */}
      <div className="section-block">
        <div className="section-title purple">–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç —ç—Ç–æ—Ç –ø—Ä–µ–ø–∞—Ä–∞—Ç?</div>
        <ul className="why-list">
          <li>–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö–æ—Ä–µ–∏</li>
          <li>–í—ã—Å–æ–∫–∞—è —á–∏—Å—Ç–æ—Ç–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</li>
          <li>–≠—Ñ—Ñ–µ–∫—Ç 6‚Äì9 –º–µ—Å—è—Ü–µ–≤</li>
          <li>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –≤–µ–¥—É—â–∏–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏</li>
        </ul>
      </div>

      {/* –û –ø—Ä–µ–ø–∞—Ä–∞—Ç–µ */}
      <div className="section-block">
        <div className="section-title purple">–û –ø—Ä–µ–ø–∞—Ä–∞—Ç–µ</div>
        <div className="product-desc">{descMain}</div>
      </div>

      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      {advantages.length > 0 && (
        <div className="section-block">
          <div className="section-title green">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</div>
          <ul className="product-advantages">
            {advantages.map((adv, idx) => (
              <li key={idx}>{adv}</li>
            ))}
          </ul>
        </div>
      )}

      {/* –°–æ—á–µ—Ç–∞–Ω–∏—è */}
      {product.combo && (
        <div className="section-block">
          <div className="section-title blue">–õ—É—á—à–µ –≤—Å–µ–≥–æ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å:</div>
          <div>{product.combo}</div>
        </div>
      )}

      {/* –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã */}
      <div className="section-block section-row">
        {product.passport_pdf && (
          <a
            href={product.passport_pdf}
            target="_blank"
            rel="noopener noreferrer"
            className="btn pdf-btn passport"
          >
            üìÑ –ü–∞—Å–ø–æ—Ä—Ç –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞
          </a>
        )}
        {product.protocol_pdf && (
          <a
            href={product.protocol_pdf}
            target="_blank"
            rel="noopener noreferrer"
            className="btn pdf-btn protocol"
          >
            üìë –ü—Ä–æ—Ç–æ–∫–æ–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          </a>
        )}
      </div>

      {/* –ë–æ–Ω—É—Å-–ª–µ–π–±–ª */}
      {hasBonus && (
        <div className="bonus-label-row">
          <span className="bonus-label">
            <span role="img" aria-label="gift">üéÅ</span> –ü–æ–¥–∞—Ä–æ–∫ –∏–ª–∏ —Å–∫–∏–¥–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
          </span>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É */}
      <div className="action-row-bottom clean-row">
        <button
          className="btn ask-btn clean"
          onClick={() => window.Telegram?.WebApp?.openTelegramLink?.()}
        >
          <span role="img" aria-label="question">üí¨</span> –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
        </button>
        <button className="btn cart-btn clean" onClick={handleAddToCart}>
          –í –∫–æ—Ä–∑–∏–Ω—É
        </button>
      </div>

      {/* –ú–æ–¥–∞–ª–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã */}
      {showCartModal && (
        <CartModal
          product={product}
          onClose={() => setShowCartModal(false)}
        />
      )}
    </div>
  );
};

export default ProductPage;
