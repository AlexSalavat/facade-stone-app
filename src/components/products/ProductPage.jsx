// src/components/products/ProductPage.jsx

import React, { useState } from "react";
import { useParams } from "react-router-dom";
import BackButton from "../BackButton";
import { products } from "../../data/products";
import "../../styles/ProductPage.css";

const getProductComposition = (product) => {
  // –ú–æ–∂–µ—à—å –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –∏–ª–∏ —Ä—É–∫–∞–º–∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
  if (product.id === "botulax-200")
    return "Clostridium Botulinum Toxin Type A 200 units";
  if (product.id === "hutox-100")
    return "–ë–æ—Ç—É–ª–∏–Ω–∏—á–µ—Å–∫–∏–π —Ç–æ–∫—Å–∏–Ω —Ç–∏–ø–∞ A (Clostridium Botulinum Toxin Type A)";
  if (product.id === "belleera-r15")
    return "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞, 3 –º–ª";
  if (product.id === "sosum-soft")
    return "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (cross-linked), 3 –º–ª";
  if (product.id === "neuramis-deep")
    return "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ 20‚ÄØ–º–≥/–º–ª, –ª–∏–¥–æ–∫–∞–∏–Ω";
  if (product.id === "kiara-reju")
    return "PDRN, –≥–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞, –∫–æ—ç–Ω–∑–∏–º—ã";
  return "";
};

const ProductPage = () => {
  const { productId } = useParams();
  const product = products.find((p) => String(p.id) === String(productId));
  const [modalImg, setModalImg] = useState(null);

  if (!product) {
    return (
      <div className="product-page">
        <BackButton />
        <h2>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
      </div>
    );
  }

  return (
    <div className="product-page">
      <BackButton />

      <div className="product-main-info">
        <div className="product-main-img-block">
          <img
            src={product.images[0]}
            alt={product.name}
            className="product-main-img"
          />
        </div>
        <div className="product-main-text">
          <div className="product-title">{product.name}</div>
          <div className="product-price">{product.price} ‚ÇΩ</div>
          <div className="product-meta">
            <span className="product-country">üá∞üá∑ –ö–æ—Ä–µ—è</span>
            <span className="product-rating">‚òÖ {product.rating}</span>
          </div>
        </div>
      </div>

      <div className="product-gallery-thumbs">
        {product.images.map((img, idx) => (
          <img
            key={idx}
            src={img}
            alt={`${product.name} thumb-${idx}`}
            className="product-thumb-img"
            onClick={() => setModalImg(img)}
          />
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –±–æ–ª—å—à–æ–≥–æ —Ñ–æ—Ç–æ */}
      {modalImg && (
        <div className="product-modal" onClick={() => setModalImg(null)}>
          <img src={modalImg} alt="big" className="product-modal-img" />
        </div>
      )}

      <div className="section">
        <div className="section-title about">–û –ø—Ä–µ–ø–∞—Ä–∞—Ç–µ</div>
        <div className="section-desc">{product.description?.split("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:")[0]?.trim()}</div>
      </div>

      <div className="section">
        <div className="section-title composition">–°–æ—Å—Ç–∞–≤</div>
        <div className="section-desc italic">{getProductComposition(product)}</div>
      </div>

      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      {product.description?.includes("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:") && (
        <div className="section">
          <div className="section-title advantages">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</div>
          <ul className="advantages-list">
            {product.description
              .split("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:")[1]
              .split("\n")
              .map((adv, i) => adv.trim())
              .filter(Boolean)
              .map((adv, idx) => (
                <li key={idx}>{adv.replace(/^[-‚Äì‚ñ™Ô∏è‚Ä¢]+/g, "")}</li>
              ))}
          </ul>
        </div>
      )}

      {/* –°–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å */}
      {product.combo && (
        <div className="section">
          <div className="section-title combo">–õ—É—á—à–µ –≤—Å–µ–≥–æ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å:</div>
          <div className="section-desc">{product.combo}</div>
        </div>
      )}

      {/* PDF + –∫–Ω–æ–ø–∫–∏ */}
      <div className="product-btns-row">
        {product.pdf && (
          <a
            className="product-pdf-link"
            href={product.pdf}
            target="_blank"
            rel="noopener noreferrer"
          >
            üìÑ –û—Ç–∫—Ä—ã—Ç—å PDF
          </a>
        )}
        <button className="btn ask-btn">–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</button>
        <button className="btn cart-btn">–í –∫–æ—Ä–∑–∏–Ω—É</button>
      </div>
    </div>
  );
};

export default ProductPage;
