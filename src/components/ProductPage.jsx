import React, { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { products } from "./products";
import ProductCarousel from "./ProductCarousel"; // –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
import "./ProductPage.css";

function getFlag(country) {
  if (country === "–ö–æ—Ä–µ—è") return "üá∞üá∑";
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã
  return "";
}

const ProductPage = () => {
  const { productId } = useParams();
  const navigate = useNavigate();
  const product = products.find(p => p.id === productId);

  const [qty, setQty] = useState(1);

  if (!product) return <div className="product-notfound">–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;

  return (
    <div className="product-page-wrap">
      <button className="back-btn" onClick={() => navigate(-1)}>
        ‚Üê –ù–∞–∑–∞–¥
      </button>

      <div className="product-main-block">
        {/* –§–æ—Ç–æ-–∫–∞—Ä—É—Å–µ–ª—å */}
        <div className="product-carousel-block">
          <ProductCarousel images={product.images} />
        </div>

        {/* –ò–Ω—Ñ–æ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Ñ–æ—Ç–æ */}
        <div className="product-main-info">
          <div className="product-title-main">{product.name}</div>
          <div className="product-price">{product.price} ‚ÇΩ</div>
          <div className="product-rating-row">
            <span className="star-rating">
              {"‚òÖ".repeat(Math.round(product.rating)) +
                "‚òÜ".repeat(5 - Math.round(product.rating))}
            </span>
            <span className="product-rating-num">{product.rating}</span>
          </div>
          <div className="product-country-main">
            {getFlag(product.country)} {product.country}
          </div>
        </div>
      </div>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
      <div className="product-block-section">
        <div className="product-block-title">–û –ø—Ä–µ–ø–∞—Ä–∞—Ç–µ</div>
        <div className="product-block-text">{product.long_desc}</div>
        {product.composition && (
          <div className="product-block-composition">
            <strong>–°–æ—Å—Ç–∞–≤:</strong> {product.composition}
          </div>
        )}
        {product.usage && (
          <div className="product-block-usage">
            <strong>–ü–æ–∫–∞–∑–∞–Ω–∏—è:</strong> {product.usage}
          </div>
        )}
        {product.advantages && product.advantages.length > 0 && (
          <ul className="product-advantages-list">
            {product.advantages.map((adv, i) => (
              <li key={i}>{adv}</li>
            ))}
          </ul>
        )}
      </div>

      {/* PDF –ø—Ä–æ—Ç–æ–∫–æ–ª */}
      {product.pdf && (
        <div className="product-block-section">
          <a
            className="product-protocol-btn"
            href={product.pdf}
            download
            target="_blank"
            rel="noopener noreferrer"
          >
            üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª (PDF)
          </a>
        </div>
      )}

      {/* –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–∫–ª–∞–¥–µ –∏ –∑–∞–∫–∞–∑ */}
      <div className="product-order-block">
        <div className="product-stock">
          {product.stock > 0 ? `–í –Ω–∞–ª–∏—á–∏–∏: ${product.stock} —à—Ç.` : "–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"}
        </div>
        {product.stock > 0 && (
          <div className="product-order-form">
            <button className="qty-btn" onClick={() => setQty(Math.max(1, qty - 1))}>-</button>
            <span className="qty-value">{qty}</span>
            <button className="qty-btn" onClick={() => setQty(Math.min(product.stock, qty + 1))}>+</button>
            <button className="add-to-cart-btn">
              –í –∫–æ—Ä–∑–∏–Ω—É
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

export default ProductPage;
